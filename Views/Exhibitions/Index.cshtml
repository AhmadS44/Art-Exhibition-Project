@using ArtExhibitionProject.Models
@model PaginatedList<Art_Exhibition_Project.Models.Exhibition>
@using Microsoft.AspNetCore.Identity
@using Art_Exhibition_Project.Areas.Identity.Data
@inject SignInManager<Art_Exhibition_ProjectUser> SignInManager
@inject UserManager<Art_Exhibition_ProjectUser> UserManager

@{
    ViewData["Title"] = "Index";
}

<h1>Exhibition</h1>

<p>
    <a class="btn btn-success" asp-action="Create">Create</a>
</p>
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Gallery Name
            </th>
            <th>
                City
            </th>
            <th>
                Zip
            </th>
            <th>
                Country
            </th>
            <th>
                Starting Date
            </th>
            <th>
                Finish Date
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.GalleryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Zip)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartingDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FinishDate)
            </td>
                @if (SignInManager.IsSignedIn(User))
                {
                    <td>
                        <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.ExhibitionID">Edit</a> |
                        <a class="btn btn-info" asp-action="Details" asp-route-id="@item.ExhibitionID">Details</a> |
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.ExhibitionID">Delete</a>
                    </td>
                }
            
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="pagination-container text-center mt-4">
    <a class="page-link btn btn-default @prevDisabled d-inline-flex"
       asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]">
        Previous
    </a>

    <span class="page-link mx-2 d-inline-flex">
        Page @Model.PageIndex of @Model.TotalPages
    </span>

    <a class="page-link btn btn-default @nextDisabled d-inline-flex"
       asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]">
        Next
    </a>
</div>

